
ATStudio_tests.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000980  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000090c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800100  00800100  00000980  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001616  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000888  00000000  00000000  0000213e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e6e  00000000  00000000  000029c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003fc  00000000  00000000  00003834  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bde  00000000  00000000  00003c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000861  00000000  00000000  0000480e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  0000506f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 31       	cpi	r26, 0x11	; 17
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  88:	0c 94 84 04 	jmp	0x908	; 0x908 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init_timer_0>:
#include "timer_8_bit.h"
#include "timer_8_bit_async.h"
#include "timer_16_bit.h"

driver_setup_error_t init_timer_0(void)
{
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	cd b7       	in	r28, 0x3d	; 61
  96:	de b7       	in	r29, 0x3e	; 62
  98:	6b 97       	sbiw	r28, 0x1b	; 27
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
    timer_8_bit_config_t config;
    timer_error_t local_error;
    {
        local_error = timer_8_bit_get_default_config(&config);
  a4:	ce 01       	movw	r24, r28
  a6:	02 96       	adiw	r24, 0x02	; 2
  a8:	0e 94 da 01 	call	0x3b4	; 0x3b4 <timer_8_bit_get_default_config>
  ac:	89 83       	std	Y+1, r24	; 0x01
        if (TIMER_ERROR_OK != local_error)
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	88 23       	and	r24, r24
  b2:	11 f0       	breq	.+4      	; 0xb8 <init_timer_0+0x28>
        {
            return DRIVER_SETUP_ERROR_INIT_FAILED;
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	35 c0       	rjmp	.+106    	; 0x122 <init_timer_0+0x92>
        }
    }

    /* Configuring handle */
    config.handle.OCRA = &OCR0A;
  b8:	87 e4       	ldi	r24, 0x47	; 71
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	9d 8b       	std	Y+21, r25	; 0x15
  be:	8c 8b       	std	Y+20, r24	; 0x14
    config.handle.OCRB = &OCR0B;
  c0:	88 e4       	ldi	r24, 0x48	; 72
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	9f 8b       	std	Y+23, r25	; 0x17
  c6:	8e 8b       	std	Y+22, r24	; 0x16
    config.handle.TCCRA = &TCCR0A;
  c8:	84 e4       	ldi	r24, 0x44	; 68
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	9f 87       	std	Y+15, r25	; 0x0f
  ce:	8e 87       	std	Y+14, r24	; 0x0e
    config.handle.TCCRB = &TCCR0B;
  d0:	85 e4       	ldi	r24, 0x45	; 69
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	99 8b       	std	Y+17, r25	; 0x11
  d6:	88 8b       	std	Y+16, r24	; 0x10
    config.handle.TCNT = &TCNT0;
  d8:	86 e4       	ldi	r24, 0x46	; 70
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	9b 8b       	std	Y+19, r25	; 0x13
  de:	8a 8b       	std	Y+18, r24	; 0x12
    config.handle.TIFR = &TIFR0;
  e0:	85 e3       	ldi	r24, 0x35	; 53
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	9b 8f       	std	Y+27, r25	; 0x1b
  e6:	8a 8f       	std	Y+26, r24	; 0x1a
    config.handle.TIMSK = &TIMSK0;
  e8:	8e e6       	ldi	r24, 0x6E	; 110
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	99 8f       	std	Y+25, r25	; 0x19
  ee:	88 8f       	std	Y+24, r24	; 0x18

    /* Configuring timer */
    /* F_CPU = 16'000'000 Hz ; F_TIMER0 2'000'000 Hz*/
    /* 8-bit wide -> 256 values => F_PWM_0 = 7812 Hz*/
    config.timing_config.prescaler = TIMERxBIT_CLK_PRESCALER_8;
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	88 87       	std	Y+8, r24	; 0x08
    config.timing_config.waveform_mode = TIMER8BIT_WG_PWM_FAST_FULL_RANGE;
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	8f 83       	std	Y+7, r24	; 0x07
    /* Invert OC0x behavior to provide a correct PWM for a push-pull driver pair */
    config.timing_config.comp_match_a = TIMER8BIT_CMOD_CLEAR_OCnX;
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8d 83       	std	Y+5, r24	; 0x05
    config.timing_config.comp_match_b = TIMER8BIT_CMOD_SET_OCnX;
  fc:	83 e0       	ldi	r24, 0x03	; 3
  fe:	8e 83       	std	Y+6, r24	; 0x06
    /* Duty cycle : 39 % */
    config.timing_config.ocra_val = 99;
 100:	83 e6       	ldi	r24, 0x63	; 99
 102:	8b 83       	std	Y+3, r24	; 0x03
    config.timing_config.ocrb_val = 99;
 104:	83 e6       	ldi	r24, 0x63	; 99
 106:	8c 83       	std	Y+4, r24	; 0x04

    {
        local_error = timer_8_bit_init(0, &config);
 108:	ce 01       	movw	r24, r28
 10a:	02 96       	adiw	r24, 0x02	; 2
 10c:	bc 01       	movw	r22, r24
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	0e 94 c6 03 	call	0x78c	; 0x78c <timer_8_bit_init>
 114:	89 83       	std	Y+1, r24	; 0x01
        if (TIMER_ERROR_OK != local_error)
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	88 23       	and	r24, r24
 11a:	11 f0       	breq	.+4      	; 0x120 <init_timer_0+0x90>
        {
            return DRIVER_SETUP_ERROR_INIT_FAILED;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	01 c0       	rjmp	.+2      	; 0x122 <init_timer_0+0x92>
        }
    }
    return DRIVER_SETUP_ERROR_OK;
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	6b 96       	adiw	r28, 0x1b	; 27
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <error_handler>:

#define MAX_MUX 5
#define USE_TIMER_DRIVER 1

void error_handler(void)
{
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	cd b7       	in	r28, 0x3d	; 61
 13a:	de b7       	in	r29, 0x3e	; 62
    while(1)
    {
        asm("NOP");
 13c:	00 00       	nop
    }
 13e:	fe cf       	rjmp	.-4      	; 0x13c <error_handler+0x8>

00000140 <main>:
}

int main(void)
{
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	00 d0       	rcall	.+0      	; 0x146 <main+0x6>
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
    driver_setup_error_t init_error = DRIVER_SETUP_ERROR_OK;
 14a:	19 82       	std	Y+1, r1	; 0x01

#ifdef USE_TIMER_DRIVER
    init_error = init_timer_0();
 14c:	0e 94 48 00 	call	0x90	; 0x90 <init_timer_0>
 150:	89 83       	std	Y+1, r24	; 0x01
#else
    TCCR0A = (1 << WGM01) | (1 << WGM00) | (1 << COM0A0) | (1 << COM0B0) | (1 << COM0B1)  ;
    TCCR0B = (1 << CS01);
#endif

    if (DRIVER_SETUP_ERROR_OK != init_error)
 152:	89 81       	ldd	r24, Y+1	; 0x01
 154:	88 23       	and	r24, r24
 156:	11 f0       	breq	.+4      	; 0x15c <main+0x1c>
    {
        error_handler();
 158:	0e 94 9a 00 	call	0x134	; 0x134 <error_handler>
    }

#ifdef USE_TIMER_DRIVER
    timer_error_t timer_error = timer_8_bit_start(0);
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 10 04 	call	0x820	; 0x820 <timer_8_bit_start>
 162:	8a 83       	std	Y+2, r24	; 0x02
    if (TIMER_ERROR_OK != timer_error)
 164:	8a 81       	ldd	r24, Y+2	; 0x02
 166:	88 23       	and	r24, r24
 168:	11 f0       	breq	.+4      	; 0x16e <main+0x2e>
    {
        error_handler();
 16a:	0e 94 9a 00 	call	0x134	; 0x134 <error_handler>
    }
	
	/* Enable OC0A and OC0B as outputs */
    /* PD6 = OC0A on arduino nano */
    /* PD5 = OC0B on arduino nano */
    DDRD |= (1 << PORTD5) | (1 << PORTD6);
 16e:	8a e2       	ldi	r24, 0x2A	; 42
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	2a e2       	ldi	r18, 0x2A	; 42
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	f9 01       	movw	r30, r18
 178:	20 81       	ld	r18, Z
 17a:	20 66       	ori	r18, 0x60	; 96
 17c:	fc 01       	movw	r30, r24
 17e:	20 83       	st	Z, r18

    /* Set original port state of OC0A/OC0B pins before any OCRx overrides them */
    /* This is done in opposing polarities to respect mosfet push-pull driver pair starting point*/
    PORTD &= ~(1 << PORTD5);    // Pulled to Vcc (low side of mosfet driver pulls mosfet's gate to ground)
 180:	8b e2       	ldi	r24, 0x2B	; 43
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	2b e2       	ldi	r18, 0x2B	; 43
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	f9 01       	movw	r30, r18
 18a:	20 81       	ld	r18, Z
 18c:	2f 7d       	andi	r18, 0xDF	; 223
 18e:	fc 01       	movw	r30, r24
 190:	20 83       	st	Z, r18
    PORTD |= (1 << PORTD6);   // Pulled to ground (high side of mosfet driver is depleted)
 192:	8b e2       	ldi	r24, 0x2B	; 43
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	2b e2       	ldi	r18, 0x2B	; 43
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	f9 01       	movw	r30, r18
 19c:	20 81       	ld	r18, Z
 19e:	20 64       	ori	r18, 0x40	; 64
 1a0:	fc 01       	movw	r30, r24
 1a2:	20 83       	st	Z, r18

    while(true)
    {
        static uint8_t idx = 0;

        idx++;
 1a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1a8:	8f 5f       	subi	r24, 0xFF	; 255
 1aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
        idx %= MAX_MUX;
 1ae:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 1b2:	8d ec       	ldi	r24, 0xCD	; 205
 1b4:	28 9f       	mul	r18, r24
 1b6:	81 2d       	mov	r24, r1
 1b8:	11 24       	eor	r1, r1
 1ba:	98 2f       	mov	r25, r24
 1bc:	96 95       	lsr	r25
 1be:	96 95       	lsr	r25
 1c0:	89 2f       	mov	r24, r25
 1c2:	88 0f       	add	r24, r24
 1c4:	88 0f       	add	r24, r24
 1c6:	89 0f       	add	r24, r25
 1c8:	92 2f       	mov	r25, r18
 1ca:	98 1b       	sub	r25, r24
 1cc:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
    }
 1d0:	e9 cf       	rjmp	.-46     	; 0x1a4 <main+0x64>

000001d2 <check_handle>:
        {
            internal_config[id].is_initialised = false;
        }
    }
    return ret;
}
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	00 d0       	rcall	.+0      	; 0x1d8 <check_handle+0x6>
 1d8:	1f 92       	push	r1
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	9b 83       	std	Y+3, r25	; 0x03
 1e0:	8a 83       	std	Y+2, r24	; 0x02
 1e2:	19 82       	std	Y+1, r1	; 0x01
 1e4:	8a 81       	ldd	r24, Y+2	; 0x02
 1e6:	9b 81       	ldd	r25, Y+3	; 0x03
 1e8:	89 2b       	or	r24, r25
 1ea:	19 f4       	brne	.+6      	; 0x1f2 <check_handle+0x20>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	89 83       	std	Y+1, r24	; 0x01
 1f0:	93 c0       	rjmp	.+294    	; 0x318 <check_handle+0x146>
 1f2:	89 81       	ldd	r24, Y+1	; 0x01
 1f4:	28 2f       	mov	r18, r24
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	8a 81       	ldd	r24, Y+2	; 0x02
 1fa:	9b 81       	ldd	r25, Y+3	; 0x03
 1fc:	fc 01       	movw	r30, r24
 1fe:	86 81       	ldd	r24, Z+6	; 0x06
 200:	97 81       	ldd	r25, Z+7	; 0x07
 202:	41 e0       	ldi	r20, 0x01	; 1
 204:	89 2b       	or	r24, r25
 206:	09 f0       	breq	.+2      	; 0x20a <check_handle+0x38>
 208:	40 e0       	ldi	r20, 0x00	; 0
 20a:	84 2f       	mov	r24, r20
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	82 2b       	or	r24, r18
 210:	93 2b       	or	r25, r19
 212:	21 e0       	ldi	r18, 0x01	; 1
 214:	89 2b       	or	r24, r25
 216:	09 f4       	brne	.+2      	; 0x21a <check_handle+0x48>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	29 83       	std	Y+1, r18	; 0x01
 21c:	89 81       	ldd	r24, Y+1	; 0x01
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	8a 81       	ldd	r24, Y+2	; 0x02
 224:	9b 81       	ldd	r25, Y+3	; 0x03
 226:	fc 01       	movw	r30, r24
 228:	80 85       	ldd	r24, Z+8	; 0x08
 22a:	91 85       	ldd	r25, Z+9	; 0x09
 22c:	41 e0       	ldi	r20, 0x01	; 1
 22e:	89 2b       	or	r24, r25
 230:	09 f0       	breq	.+2      	; 0x234 <check_handle+0x62>
 232:	40 e0       	ldi	r20, 0x00	; 0
 234:	84 2f       	mov	r24, r20
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	82 2b       	or	r24, r18
 23a:	93 2b       	or	r25, r19
 23c:	21 e0       	ldi	r18, 0x01	; 1
 23e:	89 2b       	or	r24, r25
 240:	09 f4       	brne	.+2      	; 0x244 <check_handle+0x72>
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	29 83       	std	Y+1, r18	; 0x01
 246:	89 81       	ldd	r24, Y+1	; 0x01
 248:	28 2f       	mov	r18, r24
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	8a 81       	ldd	r24, Y+2	; 0x02
 24e:	9b 81       	ldd	r25, Y+3	; 0x03
 250:	fc 01       	movw	r30, r24
 252:	80 81       	ld	r24, Z
 254:	91 81       	ldd	r25, Z+1	; 0x01
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	89 2b       	or	r24, r25
 25a:	09 f0       	breq	.+2      	; 0x25e <check_handle+0x8c>
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	84 2f       	mov	r24, r20
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	82 2b       	or	r24, r18
 264:	93 2b       	or	r25, r19
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	89 2b       	or	r24, r25
 26a:	09 f4       	brne	.+2      	; 0x26e <check_handle+0x9c>
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	29 83       	std	Y+1, r18	; 0x01
 270:	89 81       	ldd	r24, Y+1	; 0x01
 272:	28 2f       	mov	r18, r24
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	8a 81       	ldd	r24, Y+2	; 0x02
 278:	9b 81       	ldd	r25, Y+3	; 0x03
 27a:	fc 01       	movw	r30, r24
 27c:	82 81       	ldd	r24, Z+2	; 0x02
 27e:	93 81       	ldd	r25, Z+3	; 0x03
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	89 2b       	or	r24, r25
 284:	09 f0       	breq	.+2      	; 0x288 <check_handle+0xb6>
 286:	40 e0       	ldi	r20, 0x00	; 0
 288:	84 2f       	mov	r24, r20
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	82 2b       	or	r24, r18
 28e:	93 2b       	or	r25, r19
 290:	21 e0       	ldi	r18, 0x01	; 1
 292:	89 2b       	or	r24, r25
 294:	09 f4       	brne	.+2      	; 0x298 <check_handle+0xc6>
 296:	20 e0       	ldi	r18, 0x00	; 0
 298:	29 83       	std	Y+1, r18	; 0x01
 29a:	89 81       	ldd	r24, Y+1	; 0x01
 29c:	28 2f       	mov	r18, r24
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	8a 81       	ldd	r24, Y+2	; 0x02
 2a2:	9b 81       	ldd	r25, Y+3	; 0x03
 2a4:	fc 01       	movw	r30, r24
 2a6:	84 81       	ldd	r24, Z+4	; 0x04
 2a8:	95 81       	ldd	r25, Z+5	; 0x05
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	89 2b       	or	r24, r25
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <check_handle+0xe0>
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	84 2f       	mov	r24, r20
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	82 2b       	or	r24, r18
 2b8:	93 2b       	or	r25, r19
 2ba:	21 e0       	ldi	r18, 0x01	; 1
 2bc:	89 2b       	or	r24, r25
 2be:	09 f4       	brne	.+2      	; 0x2c2 <check_handle+0xf0>
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	29 83       	std	Y+1, r18	; 0x01
 2c4:	89 81       	ldd	r24, Y+1	; 0x01
 2c6:	28 2f       	mov	r18, r24
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	8a 81       	ldd	r24, Y+2	; 0x02
 2cc:	9b 81       	ldd	r25, Y+3	; 0x03
 2ce:	fc 01       	movw	r30, r24
 2d0:	84 85       	ldd	r24, Z+12	; 0x0c
 2d2:	95 85       	ldd	r25, Z+13	; 0x0d
 2d4:	41 e0       	ldi	r20, 0x01	; 1
 2d6:	89 2b       	or	r24, r25
 2d8:	09 f0       	breq	.+2      	; 0x2dc <check_handle+0x10a>
 2da:	40 e0       	ldi	r20, 0x00	; 0
 2dc:	84 2f       	mov	r24, r20
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	82 2b       	or	r24, r18
 2e2:	93 2b       	or	r25, r19
 2e4:	21 e0       	ldi	r18, 0x01	; 1
 2e6:	89 2b       	or	r24, r25
 2e8:	09 f4       	brne	.+2      	; 0x2ec <check_handle+0x11a>
 2ea:	20 e0       	ldi	r18, 0x00	; 0
 2ec:	29 83       	std	Y+1, r18	; 0x01
 2ee:	89 81       	ldd	r24, Y+1	; 0x01
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	9b 81       	ldd	r25, Y+3	; 0x03
 2f8:	fc 01       	movw	r30, r24
 2fa:	82 85       	ldd	r24, Z+10	; 0x0a
 2fc:	93 85       	ldd	r25, Z+11	; 0x0b
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	89 2b       	or	r24, r25
 302:	09 f0       	breq	.+2      	; 0x306 <check_handle+0x134>
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	84 2f       	mov	r24, r20
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	82 2b       	or	r24, r18
 30c:	93 2b       	or	r25, r19
 30e:	21 e0       	ldi	r18, 0x01	; 1
 310:	89 2b       	or	r24, r25
 312:	09 f4       	brne	.+2      	; 0x316 <check_handle+0x144>
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	29 83       	std	Y+1, r18	; 0x01
 318:	89 81       	ldd	r24, Y+1	; 0x01
 31a:	88 23       	and	r24, r24
 31c:	11 f0       	breq	.+4      	; 0x322 <check_handle+0x150>
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	01 c0       	rjmp	.+2      	; 0x324 <check_handle+0x152>
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	0f 90       	pop	r0
 326:	0f 90       	pop	r0
 328:	0f 90       	pop	r0
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	08 95       	ret

00000330 <check_id>:
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	1f 92       	push	r1
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	89 83       	std	Y+1, r24	; 0x01
 33c:	89 81       	ldd	r24, Y+1	; 0x01
 33e:	88 23       	and	r24, r24
 340:	11 f0       	breq	.+4      	; 0x346 <check_id+0x16>
 342:	84 e0       	ldi	r24, 0x04	; 4
 344:	01 c0       	rjmp	.+2      	; 0x348 <check_id+0x18>
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0f 90       	pop	r0
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	08 95       	ret

00000350 <timer_8_bit_set_handle>:
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	00 d0       	rcall	.+0      	; 0x356 <timer_8_bit_set_handle+0x6>
 356:	00 d0       	rcall	.+0      	; 0x358 <timer_8_bit_set_handle+0x8>
 358:	cd b7       	in	r28, 0x3d	; 61
 35a:	de b7       	in	r29, 0x3e	; 62
 35c:	8a 83       	std	Y+2, r24	; 0x02
 35e:	7c 83       	std	Y+4, r23	; 0x04
 360:	6b 83       	std	Y+3, r22	; 0x03
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	0e 94 98 01 	call	0x330	; 0x330 <check_id>
 368:	89 83       	std	Y+1, r24	; 0x01
 36a:	89 81       	ldd	r24, Y+1	; 0x01
 36c:	88 23       	and	r24, r24
 36e:	11 f0       	breq	.+4      	; 0x374 <timer_8_bit_set_handle+0x24>
 370:	89 81       	ldd	r24, Y+1	; 0x01
 372:	19 c0       	rjmp	.+50     	; 0x3a6 <timer_8_bit_set_handle+0x56>
 374:	8b 81       	ldd	r24, Y+3	; 0x03
 376:	9c 81       	ldd	r25, Y+4	; 0x04
 378:	89 2b       	or	r24, r25
 37a:	11 f4       	brne	.+4      	; 0x380 <timer_8_bit_set_handle+0x30>
 37c:	82 e0       	ldi	r24, 0x02	; 2
 37e:	13 c0       	rjmp	.+38     	; 0x3a6 <timer_8_bit_set_handle+0x56>
 380:	8a 81       	ldd	r24, Y+2	; 0x02
 382:	88 2f       	mov	r24, r24
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	82 95       	swap	r24
 388:	92 95       	swap	r25
 38a:	90 7f       	andi	r25, 0xF0	; 240
 38c:	98 27       	eor	r25, r24
 38e:	80 7f       	andi	r24, 0xF0	; 240
 390:	98 27       	eor	r25, r24
 392:	8f 5f       	subi	r24, 0xFF	; 255
 394:	9e 4f       	sbci	r25, 0xFE	; 254
 396:	2b 81       	ldd	r18, Y+3	; 0x03
 398:	3c 81       	ldd	r19, Y+4	; 0x04
 39a:	4e e0       	ldi	r20, 0x0E	; 14
 39c:	50 e0       	ldi	r21, 0x00	; 0
 39e:	b9 01       	movw	r22, r18
 3a0:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <memcpy>
 3a4:	89 81       	ldd	r24, Y+1	; 0x01
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	08 95       	ret

000003b4 <timer_8_bit_get_default_config>:
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	00 d0       	rcall	.+0      	; 0x3ba <timer_8_bit_get_default_config+0x6>
 3ba:	1f 92       	push	r1
 3bc:	cd b7       	in	r28, 0x3d	; 61
 3be:	de b7       	in	r29, 0x3e	; 62
 3c0:	9b 83       	std	Y+3, r25	; 0x03
 3c2:	8a 83       	std	Y+2, r24	; 0x02
 3c4:	19 82       	std	Y+1, r1	; 0x01
 3c6:	89 81       	ldd	r24, Y+1	; 0x01
 3c8:	88 23       	and	r24, r24
 3ca:	11 f0       	breq	.+4      	; 0x3d0 <timer_8_bit_get_default_config+0x1c>
 3cc:	89 81       	ldd	r24, Y+1	; 0x01
 3ce:	5a c0       	rjmp	.+180    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	9b 81       	ldd	r25, Y+3	; 0x03
 3d4:	89 2b       	or	r24, r25
 3d6:	11 f4       	brne	.+4      	; 0x3dc <timer_8_bit_get_default_config+0x28>
 3d8:	82 e0       	ldi	r24, 0x02	; 2
 3da:	54 c0       	rjmp	.+168    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	9b 81       	ldd	r25, Y+3	; 0x03
 3e0:	fc 01       	movw	r30, r24
 3e2:	17 82       	std	Z+7, r1	; 0x07
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
 3e6:	9b 81       	ldd	r25, Y+3	; 0x03
 3e8:	fc 01       	movw	r30, r24
 3ea:	10 86       	std	Z+8, r1	; 0x08
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	9b 81       	ldd	r25, Y+3	; 0x03
 3f0:	fc 01       	movw	r30, r24
 3f2:	11 86       	std	Z+9, r1	; 0x09
 3f4:	8a 81       	ldd	r24, Y+2	; 0x02
 3f6:	9b 81       	ldd	r25, Y+3	; 0x03
 3f8:	fc 01       	movw	r30, r24
 3fa:	10 82       	st	Z, r1
 3fc:	8a 81       	ldd	r24, Y+2	; 0x02
 3fe:	9b 81       	ldd	r25, Y+3	; 0x03
 400:	fc 01       	movw	r30, r24
 402:	11 82       	std	Z+1, r1	; 0x01
 404:	8a 81       	ldd	r24, Y+2	; 0x02
 406:	9b 81       	ldd	r25, Y+3	; 0x03
 408:	fc 01       	movw	r30, r24
 40a:	12 82       	std	Z+2, r1	; 0x02
 40c:	8a 81       	ldd	r24, Y+2	; 0x02
 40e:	9b 81       	ldd	r25, Y+3	; 0x03
 410:	fc 01       	movw	r30, r24
 412:	16 82       	std	Z+6, r1	; 0x06
 414:	8a 81       	ldd	r24, Y+2	; 0x02
 416:	9b 81       	ldd	r25, Y+3	; 0x03
 418:	fc 01       	movw	r30, r24
 41a:	15 82       	std	Z+5, r1	; 0x05
 41c:	8a 81       	ldd	r24, Y+2	; 0x02
 41e:	9b 81       	ldd	r25, Y+3	; 0x03
 420:	fc 01       	movw	r30, r24
 422:	13 82       	std	Z+3, r1	; 0x03
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	9b 81       	ldd	r25, Y+3	; 0x03
 428:	fc 01       	movw	r30, r24
 42a:	14 82       	std	Z+4, r1	; 0x04
 42c:	8a 81       	ldd	r24, Y+2	; 0x02
 42e:	9b 81       	ldd	r25, Y+3	; 0x03
 430:	fc 01       	movw	r30, r24
 432:	12 86       	std	Z+10, r1	; 0x0a
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	9b 81       	ldd	r25, Y+3	; 0x03
 438:	fc 01       	movw	r30, r24
 43a:	13 86       	std	Z+11, r1	; 0x0b
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	9b 81       	ldd	r25, Y+3	; 0x03
 440:	fc 01       	movw	r30, r24
 442:	13 8a       	std	Z+19, r1	; 0x13
 444:	12 8a       	std	Z+18, r1	; 0x12
 446:	8a 81       	ldd	r24, Y+2	; 0x02
 448:	9b 81       	ldd	r25, Y+3	; 0x03
 44a:	fc 01       	movw	r30, r24
 44c:	15 8a       	std	Z+21, r1	; 0x15
 44e:	14 8a       	std	Z+20, r1	; 0x14
 450:	8a 81       	ldd	r24, Y+2	; 0x02
 452:	9b 81       	ldd	r25, Y+3	; 0x03
 454:	fc 01       	movw	r30, r24
 456:	15 86       	std	Z+13, r1	; 0x0d
 458:	14 86       	std	Z+12, r1	; 0x0c
 45a:	8a 81       	ldd	r24, Y+2	; 0x02
 45c:	9b 81       	ldd	r25, Y+3	; 0x03
 45e:	fc 01       	movw	r30, r24
 460:	17 86       	std	Z+15, r1	; 0x0f
 462:	16 86       	std	Z+14, r1	; 0x0e
 464:	8a 81       	ldd	r24, Y+2	; 0x02
 466:	9b 81       	ldd	r25, Y+3	; 0x03
 468:	fc 01       	movw	r30, r24
 46a:	11 8a       	std	Z+17, r1	; 0x11
 46c:	10 8a       	std	Z+16, r1	; 0x10
 46e:	8a 81       	ldd	r24, Y+2	; 0x02
 470:	9b 81       	ldd	r25, Y+3	; 0x03
 472:	fc 01       	movw	r30, r24
 474:	11 8e       	std	Z+25, r1	; 0x19
 476:	10 8e       	std	Z+24, r1	; 0x18
 478:	8a 81       	ldd	r24, Y+2	; 0x02
 47a:	9b 81       	ldd	r25, Y+3	; 0x03
 47c:	fc 01       	movw	r30, r24
 47e:	17 8a       	std	Z+23, r1	; 0x17
 480:	16 8a       	std	Z+22, r1	; 0x16
 482:	89 81       	ldd	r24, Y+1	; 0x01
 484:	0f 90       	pop	r0
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <timer_8_bit_write_config>:
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	00 d0       	rcall	.+0      	; 0x496 <timer_8_bit_write_config+0x6>
 496:	00 d0       	rcall	.+0      	; 0x498 <timer_8_bit_write_config+0x8>
 498:	00 d0       	rcall	.+0      	; 0x49a <timer_8_bit_write_config+0xa>
 49a:	cd b7       	in	r28, 0x3d	; 61
 49c:	de b7       	in	r29, 0x3e	; 62
 49e:	8c 83       	std	Y+4, r24	; 0x04
 4a0:	7e 83       	std	Y+6, r23	; 0x06
 4a2:	6d 83       	std	Y+5, r22	; 0x05
 4a4:	19 82       	std	Y+1, r1	; 0x01
 4a6:	8c 81       	ldd	r24, Y+4	; 0x04
 4a8:	88 2f       	mov	r24, r24
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	82 95       	swap	r24
 4ae:	92 95       	swap	r25
 4b0:	90 7f       	andi	r25, 0xF0	; 240
 4b2:	98 27       	eor	r25, r24
 4b4:	80 7f       	andi	r24, 0xF0	; 240
 4b6:	98 27       	eor	r25, r24
 4b8:	8f 5f       	subi	r24, 0xFF	; 255
 4ba:	9e 4f       	sbci	r25, 0xFE	; 254
 4bc:	9b 83       	std	Y+3, r25	; 0x03
 4be:	8a 83       	std	Y+2, r24	; 0x02
 4c0:	8c 81       	ldd	r24, Y+4	; 0x04
 4c2:	88 2f       	mov	r24, r24
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	2d 81       	ldd	r18, Y+5	; 0x05
 4c8:	3e 81       	ldd	r19, Y+6	; 0x06
 4ca:	f9 01       	movw	r30, r18
 4cc:	26 81       	ldd	r18, Z+6	; 0x06
 4ce:	82 95       	swap	r24
 4d0:	92 95       	swap	r25
 4d2:	90 7f       	andi	r25, 0xF0	; 240
 4d4:	98 27       	eor	r25, r24
 4d6:	80 7f       	andi	r24, 0xF0	; 240
 4d8:	98 27       	eor	r25, r24
 4da:	81 5f       	subi	r24, 0xF1	; 241
 4dc:	9e 4f       	sbci	r25, 0xFE	; 254
 4de:	fc 01       	movw	r30, r24
 4e0:	20 83       	st	Z, r18
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	9b 81       	ldd	r25, Y+3	; 0x03
 4e6:	fc 01       	movw	r30, r24
 4e8:	84 81       	ldd	r24, Z+4	; 0x04
 4ea:	95 81       	ldd	r25, Z+5	; 0x05
 4ec:	2d 81       	ldd	r18, Y+5	; 0x05
 4ee:	3e 81       	ldd	r19, Y+6	; 0x06
 4f0:	f9 01       	movw	r30, r18
 4f2:	20 81       	ld	r18, Z
 4f4:	fc 01       	movw	r30, r24
 4f6:	20 83       	st	Z, r18
 4f8:	8a 81       	ldd	r24, Y+2	; 0x02
 4fa:	9b 81       	ldd	r25, Y+3	; 0x03
 4fc:	fc 01       	movw	r30, r24
 4fe:	84 85       	ldd	r24, Z+12	; 0x0c
 500:	95 85       	ldd	r25, Z+13	; 0x0d
 502:	fc 01       	movw	r30, r24
 504:	10 82       	st	Z, r1
 506:	8a 81       	ldd	r24, Y+2	; 0x02
 508:	9b 81       	ldd	r25, Y+3	; 0x03
 50a:	fc 01       	movw	r30, r24
 50c:	86 81       	ldd	r24, Z+6	; 0x06
 50e:	97 81       	ldd	r25, Z+7	; 0x07
 510:	2d 81       	ldd	r18, Y+5	; 0x05
 512:	3e 81       	ldd	r19, Y+6	; 0x06
 514:	f9 01       	movw	r30, r18
 516:	21 81       	ldd	r18, Z+1	; 0x01
 518:	fc 01       	movw	r30, r24
 51a:	20 83       	st	Z, r18
 51c:	8a 81       	ldd	r24, Y+2	; 0x02
 51e:	9b 81       	ldd	r25, Y+3	; 0x03
 520:	fc 01       	movw	r30, r24
 522:	80 85       	ldd	r24, Z+8	; 0x08
 524:	91 85       	ldd	r25, Z+9	; 0x09
 526:	2d 81       	ldd	r18, Y+5	; 0x05
 528:	3e 81       	ldd	r19, Y+6	; 0x06
 52a:	f9 01       	movw	r30, r18
 52c:	22 81       	ldd	r18, Z+2	; 0x02
 52e:	fc 01       	movw	r30, r24
 530:	20 83       	st	Z, r18
 532:	8a 81       	ldd	r24, Y+2	; 0x02
 534:	9b 81       	ldd	r25, Y+3	; 0x03
 536:	fc 01       	movw	r30, r24
 538:	80 81       	ld	r24, Z
 53a:	91 81       	ldd	r25, Z+1	; 0x01
 53c:	2a 81       	ldd	r18, Y+2	; 0x02
 53e:	3b 81       	ldd	r19, Y+3	; 0x03
 540:	f9 01       	movw	r30, r18
 542:	20 81       	ld	r18, Z
 544:	31 81       	ldd	r19, Z+1	; 0x01
 546:	f9 01       	movw	r30, r18
 548:	20 81       	ld	r18, Z
 54a:	42 2f       	mov	r20, r18
 54c:	4f 73       	andi	r20, 0x3F	; 63
 54e:	2d 81       	ldd	r18, Y+5	; 0x05
 550:	3e 81       	ldd	r19, Y+6	; 0x06
 552:	f9 01       	movw	r30, r18
 554:	23 81       	ldd	r18, Z+3	; 0x03
 556:	22 2f       	mov	r18, r18
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	00 24       	eor	r0, r0
 55c:	36 95       	lsr	r19
 55e:	27 95       	ror	r18
 560:	07 94       	ror	r0
 562:	36 95       	lsr	r19
 564:	27 95       	ror	r18
 566:	07 94       	ror	r0
 568:	32 2f       	mov	r19, r18
 56a:	20 2d       	mov	r18, r0
 56c:	24 2b       	or	r18, r20
 56e:	fc 01       	movw	r30, r24
 570:	20 83       	st	Z, r18
 572:	8a 81       	ldd	r24, Y+2	; 0x02
 574:	9b 81       	ldd	r25, Y+3	; 0x03
 576:	fc 01       	movw	r30, r24
 578:	80 81       	ld	r24, Z
 57a:	91 81       	ldd	r25, Z+1	; 0x01
 57c:	2a 81       	ldd	r18, Y+2	; 0x02
 57e:	3b 81       	ldd	r19, Y+3	; 0x03
 580:	f9 01       	movw	r30, r18
 582:	20 81       	ld	r18, Z
 584:	31 81       	ldd	r19, Z+1	; 0x01
 586:	f9 01       	movw	r30, r18
 588:	20 81       	ld	r18, Z
 58a:	42 2f       	mov	r20, r18
 58c:	4f 7c       	andi	r20, 0xCF	; 207
 58e:	2d 81       	ldd	r18, Y+5	; 0x05
 590:	3e 81       	ldd	r19, Y+6	; 0x06
 592:	f9 01       	movw	r30, r18
 594:	24 81       	ldd	r18, Z+4	; 0x04
 596:	22 2f       	mov	r18, r18
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	22 95       	swap	r18
 59c:	32 95       	swap	r19
 59e:	30 7f       	andi	r19, 0xF0	; 240
 5a0:	32 27       	eor	r19, r18
 5a2:	20 7f       	andi	r18, 0xF0	; 240
 5a4:	32 27       	eor	r19, r18
 5a6:	24 2b       	or	r18, r20
 5a8:	fc 01       	movw	r30, r24
 5aa:	20 83       	st	Z, r18
 5ac:	8a 81       	ldd	r24, Y+2	; 0x02
 5ae:	9b 81       	ldd	r25, Y+3	; 0x03
 5b0:	fc 01       	movw	r30, r24
 5b2:	80 81       	ld	r24, Z
 5b4:	91 81       	ldd	r25, Z+1	; 0x01
 5b6:	2a 81       	ldd	r18, Y+2	; 0x02
 5b8:	3b 81       	ldd	r19, Y+3	; 0x03
 5ba:	f9 01       	movw	r30, r18
 5bc:	20 81       	ld	r18, Z
 5be:	31 81       	ldd	r19, Z+1	; 0x01
 5c0:	f9 01       	movw	r30, r18
 5c2:	20 81       	ld	r18, Z
 5c4:	42 2f       	mov	r20, r18
 5c6:	4c 7f       	andi	r20, 0xFC	; 252
 5c8:	2d 81       	ldd	r18, Y+5	; 0x05
 5ca:	3e 81       	ldd	r19, Y+6	; 0x06
 5cc:	f9 01       	movw	r30, r18
 5ce:	25 81       	ldd	r18, Z+5	; 0x05
 5d0:	23 70       	andi	r18, 0x03	; 3
 5d2:	24 2b       	or	r18, r20
 5d4:	fc 01       	movw	r30, r24
 5d6:	20 83       	st	Z, r18
 5d8:	8a 81       	ldd	r24, Y+2	; 0x02
 5da:	9b 81       	ldd	r25, Y+3	; 0x03
 5dc:	fc 01       	movw	r30, r24
 5de:	82 81       	ldd	r24, Z+2	; 0x02
 5e0:	93 81       	ldd	r25, Z+3	; 0x03
 5e2:	2a 81       	ldd	r18, Y+2	; 0x02
 5e4:	3b 81       	ldd	r19, Y+3	; 0x03
 5e6:	f9 01       	movw	r30, r18
 5e8:	22 81       	ldd	r18, Z+2	; 0x02
 5ea:	33 81       	ldd	r19, Z+3	; 0x03
 5ec:	f9 01       	movw	r30, r18
 5ee:	20 81       	ld	r18, Z
 5f0:	42 2f       	mov	r20, r18
 5f2:	47 7f       	andi	r20, 0xF7	; 247
 5f4:	2d 81       	ldd	r18, Y+5	; 0x05
 5f6:	3e 81       	ldd	r19, Y+6	; 0x06
 5f8:	f9 01       	movw	r30, r18
 5fa:	25 81       	ldd	r18, Z+5	; 0x05
 5fc:	24 70       	andi	r18, 0x04	; 4
 5fe:	22 0f       	add	r18, r18
 600:	24 2b       	or	r18, r20
 602:	fc 01       	movw	r30, r24
 604:	20 83       	st	Z, r18
 606:	8d 81       	ldd	r24, Y+5	; 0x05
 608:	9e 81       	ldd	r25, Y+6	; 0x06
 60a:	fc 01       	movw	r30, r24
 60c:	82 85       	ldd	r24, Z+10	; 0x0a
 60e:	88 23       	and	r24, r24
 610:	81 f0       	breq	.+32     	; 0x632 <timer_8_bit_write_config+0x1a2>
 612:	8a 81       	ldd	r24, Y+2	; 0x02
 614:	9b 81       	ldd	r25, Y+3	; 0x03
 616:	fc 01       	movw	r30, r24
 618:	82 81       	ldd	r24, Z+2	; 0x02
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	2a 81       	ldd	r18, Y+2	; 0x02
 61e:	3b 81       	ldd	r19, Y+3	; 0x03
 620:	f9 01       	movw	r30, r18
 622:	22 81       	ldd	r18, Z+2	; 0x02
 624:	33 81       	ldd	r19, Z+3	; 0x03
 626:	f9 01       	movw	r30, r18
 628:	20 81       	ld	r18, Z
 62a:	20 68       	ori	r18, 0x80	; 128
 62c:	fc 01       	movw	r30, r24
 62e:	20 83       	st	Z, r18
 630:	0f c0       	rjmp	.+30     	; 0x650 <timer_8_bit_write_config+0x1c0>
 632:	8a 81       	ldd	r24, Y+2	; 0x02
 634:	9b 81       	ldd	r25, Y+3	; 0x03
 636:	fc 01       	movw	r30, r24
 638:	82 81       	ldd	r24, Z+2	; 0x02
 63a:	93 81       	ldd	r25, Z+3	; 0x03
 63c:	2a 81       	ldd	r18, Y+2	; 0x02
 63e:	3b 81       	ldd	r19, Y+3	; 0x03
 640:	f9 01       	movw	r30, r18
 642:	22 81       	ldd	r18, Z+2	; 0x02
 644:	33 81       	ldd	r19, Z+3	; 0x03
 646:	f9 01       	movw	r30, r18
 648:	20 81       	ld	r18, Z
 64a:	2f 77       	andi	r18, 0x7F	; 127
 64c:	fc 01       	movw	r30, r24
 64e:	20 83       	st	Z, r18
 650:	8d 81       	ldd	r24, Y+5	; 0x05
 652:	9e 81       	ldd	r25, Y+6	; 0x06
 654:	fc 01       	movw	r30, r24
 656:	83 85       	ldd	r24, Z+11	; 0x0b
 658:	88 23       	and	r24, r24
 65a:	81 f0       	breq	.+32     	; 0x67c <timer_8_bit_write_config+0x1ec>
 65c:	8a 81       	ldd	r24, Y+2	; 0x02
 65e:	9b 81       	ldd	r25, Y+3	; 0x03
 660:	fc 01       	movw	r30, r24
 662:	82 81       	ldd	r24, Z+2	; 0x02
 664:	93 81       	ldd	r25, Z+3	; 0x03
 666:	2a 81       	ldd	r18, Y+2	; 0x02
 668:	3b 81       	ldd	r19, Y+3	; 0x03
 66a:	f9 01       	movw	r30, r18
 66c:	22 81       	ldd	r18, Z+2	; 0x02
 66e:	33 81       	ldd	r19, Z+3	; 0x03
 670:	f9 01       	movw	r30, r18
 672:	20 81       	ld	r18, Z
 674:	20 64       	ori	r18, 0x40	; 64
 676:	fc 01       	movw	r30, r24
 678:	20 83       	st	Z, r18
 67a:	0f c0       	rjmp	.+30     	; 0x69a <timer_8_bit_write_config+0x20a>
 67c:	8a 81       	ldd	r24, Y+2	; 0x02
 67e:	9b 81       	ldd	r25, Y+3	; 0x03
 680:	fc 01       	movw	r30, r24
 682:	82 81       	ldd	r24, Z+2	; 0x02
 684:	93 81       	ldd	r25, Z+3	; 0x03
 686:	2a 81       	ldd	r18, Y+2	; 0x02
 688:	3b 81       	ldd	r19, Y+3	; 0x03
 68a:	f9 01       	movw	r30, r18
 68c:	22 81       	ldd	r18, Z+2	; 0x02
 68e:	33 81       	ldd	r19, Z+3	; 0x03
 690:	f9 01       	movw	r30, r18
 692:	20 81       	ld	r18, Z
 694:	2f 7b       	andi	r18, 0xBF	; 191
 696:	fc 01       	movw	r30, r24
 698:	20 83       	st	Z, r18
 69a:	8d 81       	ldd	r24, Y+5	; 0x05
 69c:	9e 81       	ldd	r25, Y+6	; 0x06
 69e:	fc 01       	movw	r30, r24
 6a0:	87 81       	ldd	r24, Z+7	; 0x07
 6a2:	88 23       	and	r24, r24
 6a4:	81 f0       	breq	.+32     	; 0x6c6 <timer_8_bit_write_config+0x236>
 6a6:	8a 81       	ldd	r24, Y+2	; 0x02
 6a8:	9b 81       	ldd	r25, Y+3	; 0x03
 6aa:	fc 01       	movw	r30, r24
 6ac:	82 85       	ldd	r24, Z+10	; 0x0a
 6ae:	93 85       	ldd	r25, Z+11	; 0x0b
 6b0:	2a 81       	ldd	r18, Y+2	; 0x02
 6b2:	3b 81       	ldd	r19, Y+3	; 0x03
 6b4:	f9 01       	movw	r30, r18
 6b6:	22 85       	ldd	r18, Z+10	; 0x0a
 6b8:	33 85       	ldd	r19, Z+11	; 0x0b
 6ba:	f9 01       	movw	r30, r18
 6bc:	20 81       	ld	r18, Z
 6be:	22 60       	ori	r18, 0x02	; 2
 6c0:	fc 01       	movw	r30, r24
 6c2:	20 83       	st	Z, r18
 6c4:	0f c0       	rjmp	.+30     	; 0x6e4 <timer_8_bit_write_config+0x254>
 6c6:	8a 81       	ldd	r24, Y+2	; 0x02
 6c8:	9b 81       	ldd	r25, Y+3	; 0x03
 6ca:	fc 01       	movw	r30, r24
 6cc:	82 85       	ldd	r24, Z+10	; 0x0a
 6ce:	93 85       	ldd	r25, Z+11	; 0x0b
 6d0:	2a 81       	ldd	r18, Y+2	; 0x02
 6d2:	3b 81       	ldd	r19, Y+3	; 0x03
 6d4:	f9 01       	movw	r30, r18
 6d6:	22 85       	ldd	r18, Z+10	; 0x0a
 6d8:	33 85       	ldd	r19, Z+11	; 0x0b
 6da:	f9 01       	movw	r30, r18
 6dc:	20 81       	ld	r18, Z
 6de:	2d 7f       	andi	r18, 0xFD	; 253
 6e0:	fc 01       	movw	r30, r24
 6e2:	20 83       	st	Z, r18
 6e4:	8d 81       	ldd	r24, Y+5	; 0x05
 6e6:	9e 81       	ldd	r25, Y+6	; 0x06
 6e8:	fc 01       	movw	r30, r24
 6ea:	80 85       	ldd	r24, Z+8	; 0x08
 6ec:	88 23       	and	r24, r24
 6ee:	81 f0       	breq	.+32     	; 0x710 <timer_8_bit_write_config+0x280>
 6f0:	8a 81       	ldd	r24, Y+2	; 0x02
 6f2:	9b 81       	ldd	r25, Y+3	; 0x03
 6f4:	fc 01       	movw	r30, r24
 6f6:	82 85       	ldd	r24, Z+10	; 0x0a
 6f8:	93 85       	ldd	r25, Z+11	; 0x0b
 6fa:	2a 81       	ldd	r18, Y+2	; 0x02
 6fc:	3b 81       	ldd	r19, Y+3	; 0x03
 6fe:	f9 01       	movw	r30, r18
 700:	22 85       	ldd	r18, Z+10	; 0x0a
 702:	33 85       	ldd	r19, Z+11	; 0x0b
 704:	f9 01       	movw	r30, r18
 706:	20 81       	ld	r18, Z
 708:	24 60       	ori	r18, 0x04	; 4
 70a:	fc 01       	movw	r30, r24
 70c:	20 83       	st	Z, r18
 70e:	0f c0       	rjmp	.+30     	; 0x72e <timer_8_bit_write_config+0x29e>
 710:	8a 81       	ldd	r24, Y+2	; 0x02
 712:	9b 81       	ldd	r25, Y+3	; 0x03
 714:	fc 01       	movw	r30, r24
 716:	82 85       	ldd	r24, Z+10	; 0x0a
 718:	93 85       	ldd	r25, Z+11	; 0x0b
 71a:	2a 81       	ldd	r18, Y+2	; 0x02
 71c:	3b 81       	ldd	r19, Y+3	; 0x03
 71e:	f9 01       	movw	r30, r18
 720:	22 85       	ldd	r18, Z+10	; 0x0a
 722:	33 85       	ldd	r19, Z+11	; 0x0b
 724:	f9 01       	movw	r30, r18
 726:	20 81       	ld	r18, Z
 728:	2b 7f       	andi	r18, 0xFB	; 251
 72a:	fc 01       	movw	r30, r24
 72c:	20 83       	st	Z, r18
 72e:	8d 81       	ldd	r24, Y+5	; 0x05
 730:	9e 81       	ldd	r25, Y+6	; 0x06
 732:	fc 01       	movw	r30, r24
 734:	81 85       	ldd	r24, Z+9	; 0x09
 736:	88 23       	and	r24, r24
 738:	81 f0       	breq	.+32     	; 0x75a <timer_8_bit_write_config+0x2ca>
 73a:	8a 81       	ldd	r24, Y+2	; 0x02
 73c:	9b 81       	ldd	r25, Y+3	; 0x03
 73e:	fc 01       	movw	r30, r24
 740:	82 85       	ldd	r24, Z+10	; 0x0a
 742:	93 85       	ldd	r25, Z+11	; 0x0b
 744:	2a 81       	ldd	r18, Y+2	; 0x02
 746:	3b 81       	ldd	r19, Y+3	; 0x03
 748:	f9 01       	movw	r30, r18
 74a:	22 85       	ldd	r18, Z+10	; 0x0a
 74c:	33 85       	ldd	r19, Z+11	; 0x0b
 74e:	f9 01       	movw	r30, r18
 750:	20 81       	ld	r18, Z
 752:	21 60       	ori	r18, 0x01	; 1
 754:	fc 01       	movw	r30, r24
 756:	20 83       	st	Z, r18
 758:	0f c0       	rjmp	.+30     	; 0x778 <timer_8_bit_write_config+0x2e8>
 75a:	8a 81       	ldd	r24, Y+2	; 0x02
 75c:	9b 81       	ldd	r25, Y+3	; 0x03
 75e:	fc 01       	movw	r30, r24
 760:	82 85       	ldd	r24, Z+10	; 0x0a
 762:	93 85       	ldd	r25, Z+11	; 0x0b
 764:	2a 81       	ldd	r18, Y+2	; 0x02
 766:	3b 81       	ldd	r19, Y+3	; 0x03
 768:	f9 01       	movw	r30, r18
 76a:	22 85       	ldd	r18, Z+10	; 0x0a
 76c:	33 85       	ldd	r19, Z+11	; 0x0b
 76e:	f9 01       	movw	r30, r18
 770:	20 81       	ld	r18, Z
 772:	2e 7f       	andi	r18, 0xFE	; 254
 774:	fc 01       	movw	r30, r24
 776:	20 83       	st	Z, r18
 778:	89 81       	ldd	r24, Y+1	; 0x01
 77a:	26 96       	adiw	r28, 0x06	; 6
 77c:	0f b6       	in	r0, 0x3f	; 63
 77e:	f8 94       	cli
 780:	de bf       	out	0x3e, r29	; 62
 782:	0f be       	out	0x3f, r0	; 63
 784:	cd bf       	out	0x3d, r28	; 61
 786:	df 91       	pop	r29
 788:	cf 91       	pop	r28
 78a:	08 95       	ret

0000078c <timer_8_bit_init>:
 78c:	cf 93       	push	r28
 78e:	df 93       	push	r29
 790:	00 d0       	rcall	.+0      	; 0x792 <timer_8_bit_init+0x6>
 792:	00 d0       	rcall	.+0      	; 0x794 <timer_8_bit_init+0x8>
 794:	cd b7       	in	r28, 0x3d	; 61
 796:	de b7       	in	r29, 0x3e	; 62
 798:	8a 83       	std	Y+2, r24	; 0x02
 79a:	7c 83       	std	Y+4, r23	; 0x04
 79c:	6b 83       	std	Y+3, r22	; 0x03
 79e:	8a 81       	ldd	r24, Y+2	; 0x02
 7a0:	0e 94 98 01 	call	0x330	; 0x330 <check_id>
 7a4:	89 83       	std	Y+1, r24	; 0x01
 7a6:	89 81       	ldd	r24, Y+1	; 0x01
 7a8:	88 23       	and	r24, r24
 7aa:	11 f0       	breq	.+4      	; 0x7b0 <timer_8_bit_init+0x24>
 7ac:	89 81       	ldd	r24, Y+1	; 0x01
 7ae:	31 c0       	rjmp	.+98     	; 0x812 <timer_8_bit_init+0x86>
 7b0:	8b 81       	ldd	r24, Y+3	; 0x03
 7b2:	9c 81       	ldd	r25, Y+4	; 0x04
 7b4:	0c 96       	adiw	r24, 0x0c	; 12
 7b6:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <check_handle>
 7ba:	89 83       	std	Y+1, r24	; 0x01
 7bc:	89 81       	ldd	r24, Y+1	; 0x01
 7be:	88 23       	and	r24, r24
 7c0:	11 f0       	breq	.+4      	; 0x7c6 <timer_8_bit_init+0x3a>
 7c2:	89 81       	ldd	r24, Y+1	; 0x01
 7c4:	26 c0       	rjmp	.+76     	; 0x812 <timer_8_bit_init+0x86>
 7c6:	8b 81       	ldd	r24, Y+3	; 0x03
 7c8:	9c 81       	ldd	r25, Y+4	; 0x04
 7ca:	0c 96       	adiw	r24, 0x0c	; 12
 7cc:	bc 01       	movw	r22, r24
 7ce:	8a 81       	ldd	r24, Y+2	; 0x02
 7d0:	0e 94 a8 01 	call	0x350	; 0x350 <timer_8_bit_set_handle>
 7d4:	89 83       	std	Y+1, r24	; 0x01
 7d6:	89 81       	ldd	r24, Y+1	; 0x01
 7d8:	88 23       	and	r24, r24
 7da:	11 f0       	breq	.+4      	; 0x7e0 <timer_8_bit_init+0x54>
 7dc:	89 81       	ldd	r24, Y+1	; 0x01
 7de:	19 c0       	rjmp	.+50     	; 0x812 <timer_8_bit_init+0x86>
 7e0:	8b 81       	ldd	r24, Y+3	; 0x03
 7e2:	9c 81       	ldd	r25, Y+4	; 0x04
 7e4:	bc 01       	movw	r22, r24
 7e6:	8a 81       	ldd	r24, Y+2	; 0x02
 7e8:	0e 94 48 02 	call	0x490	; 0x490 <timer_8_bit_write_config>
 7ec:	89 83       	std	Y+1, r24	; 0x01
 7ee:	89 81       	ldd	r24, Y+1	; 0x01
 7f0:	88 23       	and	r24, r24
 7f2:	71 f4       	brne	.+28     	; 0x810 <timer_8_bit_init+0x84>
 7f4:	8a 81       	ldd	r24, Y+2	; 0x02
 7f6:	88 2f       	mov	r24, r24
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	82 95       	swap	r24
 7fc:	92 95       	swap	r25
 7fe:	90 7f       	andi	r25, 0xF0	; 240
 800:	98 27       	eor	r25, r24
 802:	80 7f       	andi	r24, 0xF0	; 240
 804:	98 27       	eor	r25, r24
 806:	80 5f       	subi	r24, 0xF0	; 240
 808:	9e 4f       	sbci	r25, 0xFE	; 254
 80a:	21 e0       	ldi	r18, 0x01	; 1
 80c:	fc 01       	movw	r30, r24
 80e:	20 83       	st	Z, r18
 810:	89 81       	ldd	r24, Y+1	; 0x01
 812:	0f 90       	pop	r0
 814:	0f 90       	pop	r0
 816:	0f 90       	pop	r0
 818:	0f 90       	pop	r0
 81a:	df 91       	pop	r29
 81c:	cf 91       	pop	r28
 81e:	08 95       	ret

00000820 <timer_8_bit_start>:


timer_error_t timer_8_bit_start(uint8_t id)
{
 820:	cf 93       	push	r28
 822:	df 93       	push	r29
 824:	00 d0       	rcall	.+0      	; 0x826 <timer_8_bit_start+0x6>
 826:	cd b7       	in	r28, 0x3d	; 61
 828:	de b7       	in	r29, 0x3e	; 62
 82a:	8a 83       	std	Y+2, r24	; 0x02
    timer_error_t ret = check_id(id);
 82c:	8a 81       	ldd	r24, Y+2	; 0x02
 82e:	0e 94 98 01 	call	0x330	; 0x330 <check_id>
 832:	89 83       	std	Y+1, r24	; 0x01
    if(TIMER_ERROR_OK != ret)
 834:	89 81       	ldd	r24, Y+1	; 0x01
 836:	88 23       	and	r24, r24
 838:	11 f0       	breq	.+4      	; 0x83e <timer_8_bit_start+0x1e>
    {
        return ret;
 83a:	89 81       	ldd	r24, Y+1	; 0x01
 83c:	57 c0       	rjmp	.+174    	; 0x8ec <timer_8_bit_start+0xcc>
    }

    ret = check_handle(&internal_config[id].handle);
 83e:	8a 81       	ldd	r24, Y+2	; 0x02
 840:	88 2f       	mov	r24, r24
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	82 95       	swap	r24
 846:	92 95       	swap	r25
 848:	90 7f       	andi	r25, 0xF0	; 240
 84a:	98 27       	eor	r25, r24
 84c:	80 7f       	andi	r24, 0xF0	; 240
 84e:	98 27       	eor	r25, r24
 850:	8f 5f       	subi	r24, 0xFF	; 255
 852:	9e 4f       	sbci	r25, 0xFE	; 254
 854:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <check_handle>
 858:	89 83       	std	Y+1, r24	; 0x01
    if (TIMER_ERROR_OK != ret)
 85a:	89 81       	ldd	r24, Y+1	; 0x01
 85c:	88 23       	and	r24, r24
 85e:	11 f0       	breq	.+4      	; 0x864 <timer_8_bit_start+0x44>
    {
        return ret;
 860:	89 81       	ldd	r24, Y+1	; 0x01
 862:	44 c0       	rjmp	.+136    	; 0x8ec <timer_8_bit_start+0xcc>
    }

    if (false == internal_config[id].is_initialised)
 864:	8a 81       	ldd	r24, Y+2	; 0x02
 866:	88 2f       	mov	r24, r24
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	82 95       	swap	r24
 86c:	92 95       	swap	r25
 86e:	90 7f       	andi	r25, 0xF0	; 240
 870:	98 27       	eor	r25, r24
 872:	80 7f       	andi	r24, 0xF0	; 240
 874:	98 27       	eor	r25, r24
 876:	80 5f       	subi	r24, 0xF0	; 240
 878:	9e 4f       	sbci	r25, 0xFE	; 254
 87a:	fc 01       	movw	r30, r24
 87c:	90 81       	ld	r25, Z
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	89 27       	eor	r24, r25
 882:	88 23       	and	r24, r24
 884:	11 f0       	breq	.+4      	; 0x88a <timer_8_bit_start+0x6a>
    {
        return TIMER_ERROR_NOT_INITIALISED;
 886:	85 e0       	ldi	r24, 0x05	; 5
 888:	31 c0       	rjmp	.+98     	; 0x8ec <timer_8_bit_start+0xcc>
    }

    /* This time, set the prescaler to start the timer, unless prescaler is set to NO_CLOCK source */
    *(internal_config[id].handle.TCCRB) = (*(internal_config[id].handle.TCCRB) & ~CS_MSK) | internal_config[id].prescaler;
 88a:	8a 81       	ldd	r24, Y+2	; 0x02
 88c:	88 2f       	mov	r24, r24
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	82 95       	swap	r24
 892:	92 95       	swap	r25
 894:	90 7f       	andi	r25, 0xF0	; 240
 896:	98 27       	eor	r25, r24
 898:	80 7f       	andi	r24, 0xF0	; 240
 89a:	98 27       	eor	r25, r24
 89c:	8d 5f       	subi	r24, 0xFD	; 253
 89e:	9e 4f       	sbci	r25, 0xFE	; 254
 8a0:	fc 01       	movw	r30, r24
 8a2:	80 81       	ld	r24, Z
 8a4:	91 81       	ldd	r25, Z+1	; 0x01
 8a6:	2a 81       	ldd	r18, Y+2	; 0x02
 8a8:	22 2f       	mov	r18, r18
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	22 95       	swap	r18
 8ae:	32 95       	swap	r19
 8b0:	30 7f       	andi	r19, 0xF0	; 240
 8b2:	32 27       	eor	r19, r18
 8b4:	20 7f       	andi	r18, 0xF0	; 240
 8b6:	32 27       	eor	r19, r18
 8b8:	2d 5f       	subi	r18, 0xFD	; 253
 8ba:	3e 4f       	sbci	r19, 0xFE	; 254
 8bc:	f9 01       	movw	r30, r18
 8be:	20 81       	ld	r18, Z
 8c0:	31 81       	ldd	r19, Z+1	; 0x01
 8c2:	f9 01       	movw	r30, r18
 8c4:	20 81       	ld	r18, Z
 8c6:	42 2f       	mov	r20, r18
 8c8:	48 7f       	andi	r20, 0xF8	; 248
 8ca:	2a 81       	ldd	r18, Y+2	; 0x02
 8cc:	22 2f       	mov	r18, r18
 8ce:	30 e0       	ldi	r19, 0x00	; 0
 8d0:	22 95       	swap	r18
 8d2:	32 95       	swap	r19
 8d4:	30 7f       	andi	r19, 0xF0	; 240
 8d6:	32 27       	eor	r19, r18
 8d8:	20 7f       	andi	r18, 0xF0	; 240
 8da:	32 27       	eor	r19, r18
 8dc:	21 5f       	subi	r18, 0xF1	; 241
 8de:	3e 4f       	sbci	r19, 0xFE	; 254
 8e0:	f9 01       	movw	r30, r18
 8e2:	20 81       	ld	r18, Z
 8e4:	24 2b       	or	r18, r20
 8e6:	fc 01       	movw	r30, r24
 8e8:	20 83       	st	Z, r18
    return ret;
 8ea:	89 81       	ldd	r24, Y+1	; 0x01
}
 8ec:	0f 90       	pop	r0
 8ee:	0f 90       	pop	r0
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	08 95       	ret

000008f6 <memcpy>:
 8f6:	fb 01       	movw	r30, r22
 8f8:	dc 01       	movw	r26, r24
 8fa:	02 c0       	rjmp	.+4      	; 0x900 <__stack+0x1>
 8fc:	01 90       	ld	r0, Z+
 8fe:	0d 92       	st	X+, r0
 900:	41 50       	subi	r20, 0x01	; 1
 902:	50 40       	sbci	r21, 0x00	; 0
 904:	d8 f7       	brcc	.-10     	; 0x8fc <memcpy+0x6>
 906:	08 95       	ret

00000908 <_exit>:
 908:	f8 94       	cli

0000090a <__stop_program>:
 90a:	ff cf       	rjmp	.-2      	; 0x90a <__stop_program>
